# Server Configuration
server.port=8080
server.servlet.context-path=/api

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/techecommerce?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# JWT Configuration
app.jwt.secret=your_jwt_secret_key_here
app.jwt.expiration=86400000

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
file.upload-dir=./uploads
file.upload-dir.images=./uploads/images
file.upload-dir.documents=./uploads/documents

# Mail Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=your_email@gmail.com
spring.mail.password=your_app_password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# CORS Configuration
app.cors.allowed-origins=http://localhost:3000
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=Authorization,Content-Type,X-Requested-With,Accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers
app.cors.exposed-headers=Authorization,Content-Type
app.cors.allow-credentials=true
app.cors.max-age=3600

# Logging Configuration
logging.level.root=INFO
logging.level.com.techecommerce=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Swagger Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method

# Async Configuration
spring.task.execution.pool.core-size=2
spring.task.execution.pool.max-size=4
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=AsyncThread-

# Security Configuration
app.security.oauth2.client.registration.google.client-id=your_google_client_id
app.security.oauth2.client.registration.google.client-secret=your_google_client_secret
app.security.oauth2.client.registration.facebook.client-id=your_facebook_client_id
app.security.oauth2.client.registration.facebook.client-secret=your_facebook_client_secret

# Rate Limiting Configuration
app.rate-limit.enabled=true
app.rate-limit.requests-per-second=10
app.rate-limit.burst=20

# Cache Configuration
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=500,expireAfterWrite=600s

# Health Check Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.health.group.readiness.include=db,diskSpace
management.endpoint.health.group.liveness.include=ping
management.health.ratelimiters.enabled=true
management.health.diskspace.enabled=true
management.health.db.enabled=true
management.health.defaults.enabled=true

# Metrics Configuration
management.metrics.export.prometheus.enabled=true
management.metrics.tags.application=${spring.application.name}
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.slo.http.server.requests=10ms, 50ms, 100ms, 200ms, 500ms

# Background Jobs Configuration
spring.task.scheduling.pool.size=5
spring.task.scheduling.thread-name-prefix=ScheduledTask-
spring.task.execution.pool.core-size=2
spring.task.execution.pool.max-size=4
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=AsyncTask-
spring.task.execution.shutdown.await-termination=true
spring.task.execution.shutdown.await-termination-period=60s

# Job Scheduling Configuration
app.jobs.cleanup-temp-files.cron=0 0 0 * * *
app.jobs.send-email-notifications.cron=0 */30 * * * *
app.jobs.generate-reports.cron=0 0 1 * * *
app.jobs.backup-database.cron=0 0 2 * * *
app.jobs.cleanup-old-logs.cron=0 0 3 * * * 